import { Icon } from "@iconify/react/dist/iconify.js";
import { useState, useEffect } from "react";
import Table from "~/components/view/Table";
import UpdateModal from "~/components/modal/UpdateModal";
import DeleteModal from "~/components/modal/DeleteModal";
import GridListComponent from "~/components/form/GridList";
import DropDownCommponent from "~/components/form/Dropdown";
import FileCard from "~/components/cards/File";
import { useRouter } from "next/router";
import { MainLayout } from "~/components/layout/MainLayout";
import AddFileModal from "~/components/modal/AddFileModal";
import { File } from "@prisma/client";
const MyFiles = () => {
    const router = useRouter();
    const id = router.query.id;
    const [vertical, setVertical] = useState("grid");
    const [group, setGroup] = useState({
        name: "",
        files: [{ id: 0, name: "", state: "", date: "" }],
    });
    const tableRows = ["", "Name", "State", "Date", "Actions"];


    const openModal = (modalName: string) => {
        const modal = document.getElementById(modalName);
        if (modal !== null) {
            (modal as unknown as { showModal: () => void }).showModal();
        }
    };
    return (
        <MainLayout>
        <div className= "flex flex-col gap-2" >
        <AddNewUserModal />
        < UpdateModal />
        <DeleteModal />
        < AddFileModal />
        <span className=" text-3xl font-bold" >
            { id? group.name : "All Files"} { id }
    </span>
        < div className = "my-2 mr-4 grid items-center gap-4 sm:flex sm:flex-row-reverse" >
            <GridListComponent
            vertical={ vertical }
    setVertical = {(vertical: string) => setVertical(vertical)}
/>
    < DropDownCommponent
defaultValue = { "newest"}
itemList = { ["newest", "latest"]}
listName = "Order by"
    />
    <DropDownCommponent
            defaultValue={ "free" }
itemList = { ["free", "used", "reserved"]}
listName = "Status"
    />

    { id && (
        <div className="flex w-full gap-2 max-sm:justify-center" >
            <button
                className="btn btn-square btn-outline btn-primary btn-sm "
onClick = {() => openModal("add_user_modal")}
              >
    <Icon className="h-6 w-6" icon = { "solar:user-broken"} />
        </button>
        < button
title = "add-folder"
type = "button"
className = "btn btn-square btn-outline btn-primary btn-sm"
onClick = {() => openModal("add_file_modal")}
              >
    <Icon className="h-6 w-6" icon = { "solar:add-folder-broken"} />
        </>
        < /div>
          )}
</>
    < div
className = {
    "grid overflow-x-hidden py-4 " +
        (vertical === "grid" &&
            "gap-4 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-5")
}
    >
    { vertical === "grid" ? (
    group.files.map((file: fileInterface["file"]) => {
        return (
            <div key= { file.id } >
            <FileCard card={ file } />
                < /div>
              );
            })
          ) : (
    <Table
              dataTable= {{ rows: tableRows, cols: group.files }}
actionType = "files"
    />
          )}
</>
    < /div>
    < /MainLayout>
  );
};

export default MyFiles;
